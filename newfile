import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler

url = "https://raw.githubusercontent.com/AbedMir31/StockMarketRNN/main/SPY.csv"
headers = ['Date', 'Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume']
data = pd.read_csv(url, sep = ',', names = headers,skiprows = 1)
data = data.drop('Adj Close', axis=1)
data = data.drop('Date', axis=1)
training_size = .8
train_dataset, test_dataset = train_test_split(data,train_size = training_size, shuffle = False)
scaler = MinMaxScaler()
train_dataset = scaler.fit_transform(train_dataset.values)
print(train_dataset)
X = []
Y = []
for i in range(20,len(train_dataset)):
  X.append(train_dataset[i - 20:i,3])#[0,1,2,4]])
  Y.append(train_dataset[i,3])
X = np.array(X)
Y = np.array(Y)
inputhideen = 1,10
print('X', X.shape)
print('Y', Y.shape)
print('X',X[0])
s = np.zeros((len(X),20))
bx = np.random(())
bo = np.random(())

Ws = np.random(())
Wx = np.random(())
Wo = np.random(())
Wbx = np.random(())
Wbo = np.random(())

#forward
temps = np.dot(s[0],Ws) + np.dot(X[0],Wx) + bx
#tanh(temps)
out = np.multiply(Wo,temps) + bo





h = [20]

x[0] = [20][0]
input layers = 1

U = [input layers,hidden layers]
Ux = [input layers,hidden layers]
W = [hidden layers,hidden layers]
h(t-1) = [input layers,hidden layers]
h(t-1)W = [input layers,hidden layers]
bh = [input layers,hidden layers]

h(t) = tanh(Ux + h(t-1)W +bh)

V = [hidden layers,input layers]
h(t) = [input layers,hidden layers]
h(t)V = [input layers,input layers]
bo = [input layers,input layers]

out = bo + h(t)V


forward(x)

